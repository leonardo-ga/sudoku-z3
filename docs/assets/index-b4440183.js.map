{"version":3,"file":"index-b4440183.js","sources":["../../src/script.js"],"sourcesContent":["// Sudoku game single-file implementation\r\n// Board represented as array of 81 numbers (0 = empty)\r\n\r\nconst boardEl = document.getElementById('board');\r\nconst difficultyEl = document.getElementById('difficulty');\r\nconst newBtn = document.getElementById('newBtn');\r\nconst solveBtn = document.getElementById('solveBtn');\r\nconst checkBtn = document.getElementById('checkBtn');\r\nconst hintBtn = document.getElementById('hintBtn');\r\nconst undoBtn = document.getElementById('undoBtn');\r\nconst numpadEl = document.getElementById('numpad');\r\nconst timeEl = document.getElementById('time');\r\nconst mistakesEl = document.getElementById('mistakes');\r\nconst statusMsg = document.getElementById('statusMsg');\r\n\r\n// The solved Sudoku (the \"answer key\")\r\nlet solution = new Array(81).fill(0);\r\n// The current state of the board (what the player sees)\r\nlet state = new Array(81).fill(0);\r\n// Marks which cells are given at the start\r\nlet prefilled = new Array(81).fill(false);\r\n// Currently selected cell index\r\nlet selected = -1;\r\n// Number of incorrect inputs\r\nlet mistakes = 0;\r\n// Timer interval handle\r\nlet timer = null;\r\n// When the game started\r\nlet startTime = null;\r\n// For undo feature\r\nlet history = [];\r\n\r\n// build board cells\r\nfor (let i = 0; i < 81; i++) {\r\n    const cell = document.createElement('div');\r\n    cell.className = 'cell';\r\n    cell.dataset.index = i;\r\n    const input = document.createElement('input');\r\n    input.type = 'text';\r\n    input.maxLength = 1;\r\n    input.inputMode = 'numeric';\r\n    input.pattern = '[1-9]';\r\n    input.autocomplete = 'off';\r\n    cell.appendChild(input);\r\n    boardEl.appendChild(cell);\r\n\r\n    // click/select\r\n    cell.addEventListener('click', (e) => {\r\n        if (selected !== -1) boardEl.children[selected].classList.remove('highlight');\r\n        selected = i;\r\n        cell.classList.add('highlight');\r\n        input.focus();\r\n    });\r\n\r\n    // keyboard input\r\n    input.addEventListener('input', (e) => {\r\n        const val = input.value.replace(/[^1-9]/g, '');\r\n        input.value = val;\r\n        const idx = parseInt(cell.dataset.index);\r\n        if (prefilled[idx]) { input.value = ''; return; }\r\n        const prev = state[idx];\r\n        const num = val ? parseInt(val) : 0;\r\n        if (prev !== num) { history.push({ idx, prev }); }\r\n        state[idx] = num;\r\n        updateConflicts();\r\n        if (num && solution[idx] !== num) { mistakes++; mistakesEl.textContent = mistakes; cell.classList.add('conflict'); status('Wrong number'); }\r\n        else { cell.classList.remove('conflict'); status(''); }\r\n        checkWin();\r\n    });\r\n\r\n    // handle backspace/delete\r\n    input.addEventListener('keydown', (e) => {\r\n        if (e.key === 'Backspace' || e.key === 'Delete') {\r\n            const idx = parseInt(cell.dataset.index);\r\n            if (prefilled[idx]) { e.preventDefault(); return; }\r\n            history.push({ idx, prev: state[idx] });\r\n            state[idx] = 0; input.value = ''; updateConflicts();\r\n        }\r\n    });\r\n}\r\n\r\n// draw thicker block borders precisely\r\n(function applyBlockBorders() {\r\n    for (let r = 0; r < 9; r++) {\r\n        for (let c = 0; c < 9; c++) {\r\n            const idx = r * 9 + c;\r\n            const el = boardEl.children[idx];\r\n            const styles = [];\r\n            if (c % 3 === 0) styles.push('border-left:2px solid rgba(255,255,255,0.06)');\r\n            if (r % 3 === 0) styles.push('border-top:2px solid rgba(255,255,255,0.06)');\r\n            if (c === 8) styles.push('border-right:2px solid rgba(255,255,255,0.06)');\r\n            if (r === 8) styles.push('border-bottom:2px solid rgba(255,255,255,0.06)');\r\n            el.style.cssText += ';' + styles.join(';');\r\n        }\r\n    }\r\n})();\r\n\r\n// helper: shuffle array\r\nfunction shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n}\r\n\r\n// generate a complete solved sudoku via backtracking\r\nfunction generateSolved() {\r\n    const grid = new Array(81).fill(0);\r\n    const rows = Array.from({ length: 9 }, () => new Set());\r\n    const cols = Array.from({ length: 9 }, () => new Set());\r\n    const blocks = Array.from({ length: 9 }, () => new Set());\r\n\r\n    function blockIndex(r, c) { return Math.floor(r / 3) * 3 + Math.floor(c / 3); }\r\n\r\n    function place(pos) {\r\n        if (pos === 81) return true;\r\n        const r = Math.floor(pos / 9), c = pos % 9;\r\n        const nums = shuffle([1, 2, 3, 4, 5, 6, 7, 8, 9]);\r\n        for (const n of nums) {\r\n            if (rows[r].has(n) || cols[c].has(n) || blocks[blockIndex(r, c)].has(n)) continue;\r\n            grid[pos] = n; rows[r].add(n); cols[c].add(n); blocks[blockIndex(r, c)].add(n);\r\n            if (place(pos + 1)) return true;\r\n            grid[pos] = 0; rows[r].delete(n); cols[c].delete(n); blocks[blockIndex(r, c)].delete(n);\r\n        }\r\n        return false;\r\n    }\r\n    place(0);\r\n    return grid;\r\n}\r\n\r\n// solve via backtracking (used to verify uniqueness when generating puzzles and to provide 'solve')\r\nfunction solve(grid) {\r\n    const g = grid.slice();\r\n    function findEmpty() { for (let i = 0; i < 81; i++) if (g[i] === 0) return i; return -1; }\r\n    function valid(pos, val) {\r\n        const r = Math.floor(pos / 9), c = pos % 9; const br = Math.floor(r / 3), bc = Math.floor(c / 3);\r\n        for (let i = 0; i < 9; i++) { if (g[r * 9 + i] === val) return false; if (g[i * 9 + c] === val) return false; }\r\n        for (let rr = br * 3; rr < br * 3 + 3; rr++) for (let cc = bc * 3; cc < bc * 3 + 3; cc++) if (g[rr * 9 + cc] === val) return false;\r\n        return true;\r\n    }\r\n    function backtrack() {\r\n        const pos = findEmpty();\r\n        if (pos === -1) return true;\r\n        for (let n = 1; n <= 9; n++) {\r\n            if (!valid(pos, n)) continue;\r\n            g[pos] = n;\r\n            if (backtrack()) return true;\r\n            g[pos] = 0;\r\n        }\r\n        return false;\r\n    }\r\n    const solvable = backtrack();\r\n    return solvable ? g : null;\r\n}\r\n\r\n// remove numbers from solved board to make puzzle (naive approach)\r\nfunction makePuzzle(solved, removals) {\r\n    const puzzle = solved.slice();\r\n    const order = shuffle(Array.from({ length: 81 }, (_, i) => i));\r\n    let removed = 0;\r\n    for (const idx of order) {\r\n        if (removed >= removals) break;\r\n        const backup = puzzle[idx]; puzzle[idx] = 0;\r\n        // quick uniqueness check -- run solver and ensure at least one solution exists.\r\n        const attempt = solve(puzzle);\r\n        if (!attempt) { puzzle[idx] = backup; continue; }\r\n        removed++;\r\n    }\r\n    return puzzle;\r\n}\r\n\r\n// render board to UI\r\nfunction render() {\r\n    for (let i = 0; i < 81; i++) {\r\n        const el = boardEl.children[i];\r\n        const input = el.firstElementChild;\r\n        if (prefilled[i]) {\r\n            el.classList.add('prefilled'); input.value = state[i] || '';\r\n            input.disabled = true; input.style.fontWeight = '700';\r\n        } else {\r\n            el.classList.remove('prefilled'); input.disabled = false; input.value = state[i] || '';\r\n        }\r\n        el.classList.remove('conflict');\r\n    }\r\n    updateConflicts();\r\n}\r\n\r\nfunction updateConflicts() {\r\n    // remove conflict marks\r\n    for (let i = 0; i < 81; i++) boardEl.children[i].classList.remove('conflict');\r\n    // check rows, cols, blocks\r\n    for (let i = 0; i < 81; i++) {\r\n        const val = state[i]; if (!val) continue;\r\n        const r = Math.floor(i / 9), c = i % 9, br = Math.floor(r / 3), bc = Math.floor(c / 3);\r\n        for (let j = 0; j < 9; j++) {\r\n            const rc = r * 9 + j; if (rc !== i && state[rc] === val) boardEl.children[i].classList.add('conflict');\r\n            const cc = j * 9 + c; if (cc !== i && state[cc] === val) boardEl.children[i].classList.add('conflict');\r\n        }\r\n        for (let rr = br * 3; rr < br * 3 + 3; rr++) for (let cc = bc * 3; cc < bc * 3 + 3; cc++) {\r\n            const k = rr * 9 + cc; if (k !== i && state[k] === val) boardEl.children[i].classList.add('conflict');\r\n        }\r\n    }\r\n}\r\n\r\nfunction status(msg) {\r\n    statusMsg.textContent = msg || '';\r\n}\r\n\r\nfunction checkWin() {\r\n    if (state.every((v, i) => v !== 0 && v === solution[i])) {\r\n        status('ðŸŽ‰ Puzzle complete â€” well done!');\r\n        clearInterval(timer); timer = null;\r\n    }\r\n}\r\n\r\nfunction startTimer() {\r\n    clearInterval(timer); startTime = Date.now(); timer = setInterval(() => {\r\n        const s = Math.floor((Date.now() - startTime) / 1000);\r\n        const mm = String(Math.floor(s / 60)).padStart(2, '0');\r\n        const ss = String(s % 60).padStart(2, '0');\r\n        timeEl.textContent = mm + ':' + ss;\r\n    }, 250);\r\n}\r\n\r\n// Public actions\r\nfunction newPuzzle() {\r\n    const removals = parseInt(difficultyEl.value, 10);\r\n    status('Generating puzzle...');\r\n    // generate solved board\r\n    const solved = generateSolved();\r\n    solution = solved.slice();\r\n    // create puzzle\r\n    const puzzle = makePuzzle(solved, removals);\r\n    state = puzzle.slice();\r\n    prefilled = puzzle.map(v => v !== 0);\r\n    mistakes = 0; mistakesEl.textContent = '0'; history = [];\r\n    render(); startTimer(); status('New puzzle â€” good luck!');\r\n}\r\n\r\nfunction revealSolution() {\r\n    state = solution.slice(); render(); updateConflicts(); status('Solution revealed'); clearInterval(timer); timer = null;\r\n}\r\n\r\nfunction giveHint() {\r\n    // reveal one empty or incorrect cell\r\n    const incorrect = [];\r\n    for (let i = 0; i < 81; i++) {\r\n        if (state[i] === 0 || state[i] !== solution[i]) incorrect.push(i);\r\n    }\r\n    if (incorrect.length === 0) { status('No hints â€” puzzle seems complete'); return; }\r\n    const idx = incorrect[Math.floor(Math.random() * incorrect.length)];\r\n    history.push({ idx, prev: state[idx] });\r\n    state[idx] = solution[idx];\r\n    prefilled[idx] = false; // hint is not locked\r\n    render(); updateConflicts(); checkWin(); status('Hint revealed');\r\n}\r\n\r\nfunction undo() {\r\n    const entry = history.pop(); if (!entry) { status('Nothing to undo'); return; }\r\n    state[entry.idx] = entry.prev; render(); updateConflicts(); status('Undo');\r\n}\r\n\r\n// build number pad\r\nfor (let n = 1; n <= 9; n++) {\r\n    const b = document.createElement('div'); b.className = 'num-btn'; b.textContent = n; b.dataset.num = n;\r\n    b.addEventListener('click', () => {\r\n        if (selected === -1) { status('Select a cell first'); return; }\r\n        const el = boardEl.children[selected]; const idx = selected; if (prefilled[idx]) { status('Cell is locked'); return; }\r\n        const prev = state[idx]; history.push({ idx, prev });\r\n        state[idx] = n; el.firstElementChild.value = n; updateConflicts(); if (solution[idx] !== n) { mistakes++; mistakesEl.textContent = mistakes; el.classList.add('conflict'); status('Wrong number'); } else { el.classList.remove('conflict'); status(''); }\r\n        checkWin();\r\n    });\r\n    numpadEl.appendChild(b);\r\n}\r\n\r\n// wire buttons\r\nnewBtn.addEventListener('click', newPuzzle);\r\nsolveBtn.addEventListener('click', () => { if (confirm('Reveal full solution?')) revealSolution(); });\r\ncheckBtn.addEventListener('click', () => {\r\n    updateConflicts(); const bad = [...boardEl.children].filter(c => c.classList.contains('conflict'));\r\n    if (bad.length) status('There are conflicts â€” red cells are wrong.'); else status('No conflicts found.');\r\n});\r\nhintBtn.addEventListener('click', giveHint);\r\nundoBtn.addEventListener('click', undo);\r\n\r\n// keyboard support: numbers and arrows\r\nwindow.addEventListener('keydown', (e) => {\r\n    if (document.activeElement && document.activeElement.tagName === 'INPUT') return; // handled by input\r\n    if (e.key >= '1' && e.key <= '9') {\r\n        if (selected === -1) return; const idx = selected; if (prefilled[idx]) return; history.push({ idx, prev: state[idx] }); state[idx] = parseInt(e.key); boardEl.children[idx].firstElementChild.value = e.key; updateConflicts(); if (solution[idx] !== state[idx]) { mistakes++; mistakesEl.textContent = mistakes; boardEl.children[idx].classList.add('conflict'); }\r\n        checkWin();\r\n    }\r\n    const nav = { 'ArrowLeft': -1, 'ArrowRight': 1, 'ArrowUp': -9, 'ArrowDown': 9 };\r\n    if (nav[e.key] && selected !== -1) {\r\n        e.preventDefault(); const nx = selected + nav[e.key]; if (nx >= 0 && nx < 81) { if (selected !== -1) boardEl.children[selected].classList.remove('highlight'); selected = nx; boardEl.children[selected].classList.add('highlight'); }\r\n    }\r\n});\r\n\r\n// initialize\r\nnewPuzzle();"],"names":["boardEl","difficultyEl","newBtn","solveBtn","checkBtn","hintBtn","undoBtn","numpadEl","timeEl","mistakesEl","statusMsg","solution","state","prefilled","selected","mistakes","timer","startTime","history","i","cell","input","e","val","idx","prev","num","updateConflicts","status","checkWin","r","c","el","styles","shuffle","a","j","generateSolved","grid","rows","cols","blocks","blockIndex","place","pos","nums","n","solve","g","findEmpty","valid","br","bc","rr","cc","backtrack","makePuzzle","solved","removals","puzzle","order","_","removed","backup","render","rc","k","msg","v","startTimer","s","mm","ss","newPuzzle","revealSolution","giveHint","incorrect","undo","entry","b","nav","nx"],"mappings":"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"}